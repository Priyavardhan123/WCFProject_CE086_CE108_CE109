//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubjectFormsApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subject_class", Namespace="http://schemas.datacontract.org/2004/07/SubjectService")]
    [System.SerializableAttribute()]
    public partial class Subject_class : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Attended_lecturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float Required_attendanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Total_lecturesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Attended_lectures {
            get {
                return this.Attended_lecturesField;
            }
            set {
                if ((this.Attended_lecturesField.Equals(value) != true)) {
                    this.Attended_lecturesField = value;
                    this.RaisePropertyChanged("Attended_lectures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Required_attendance {
            get {
                return this.Required_attendanceField;
            }
            set {
                if ((this.Required_attendanceField.Equals(value) != true)) {
                    this.Required_attendanceField = value;
                    this.RaisePropertyChanged("Required_attendance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total_lectures {
            get {
                return this.Total_lecturesField;
            }
            set {
                if ((this.Total_lecturesField.Equals(value) != true)) {
                    this.Total_lecturesField = value;
                    this.RaisePropertyChanged("Total_lectures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insert_sub", ReplyAction="http://tempuri.org/IService1/insert_subResponse")]
        string insert_sub(SubjectFormsApp.ServiceReference1.Subject_class sub);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insert_sub", ReplyAction="http://tempuri.org/IService1/insert_subResponse")]
        System.Threading.Tasks.Task<string> insert_subAsync(SubjectFormsApp.ServiceReference1.Subject_class sub);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/update_sub", ReplyAction="http://tempuri.org/IService1/update_subResponse")]
        string update_sub(SubjectFormsApp.ServiceReference1.Subject_class sub);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/update_sub", ReplyAction="http://tempuri.org/IService1/update_subResponse")]
        System.Threading.Tasks.Task<string> update_subAsync(SubjectFormsApp.ServiceReference1.Subject_class sub);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubjects", ReplyAction="http://tempuri.org/IService1/GetSubjectsResponse")]
        System.Data.DataSet GetSubjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubjects", ReplyAction="http://tempuri.org/IService1/GetSubjectsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSubjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubject", ReplyAction="http://tempuri.org/IService1/GetSubjectResponse")]
        System.Data.DataSet GetSubject(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubject", ReplyAction="http://tempuri.org/IService1/GetSubjectResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSubjectAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete_Subject", ReplyAction="http://tempuri.org/IService1/delete_SubjectResponse")]
        string delete_Subject(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete_Subject", ReplyAction="http://tempuri.org/IService1/delete_SubjectResponse")]
        System.Threading.Tasks.Task<string> delete_SubjectAsync(int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SubjectFormsApp.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SubjectFormsApp.ServiceReference1.IService1>, SubjectFormsApp.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string insert_sub(SubjectFormsApp.ServiceReference1.Subject_class sub) {
            return base.Channel.insert_sub(sub);
        }
        
        public System.Threading.Tasks.Task<string> insert_subAsync(SubjectFormsApp.ServiceReference1.Subject_class sub) {
            return base.Channel.insert_subAsync(sub);
        }
        
        public string update_sub(SubjectFormsApp.ServiceReference1.Subject_class sub) {
            return base.Channel.update_sub(sub);
        }
        
        public System.Threading.Tasks.Task<string> update_subAsync(SubjectFormsApp.ServiceReference1.Subject_class sub) {
            return base.Channel.update_subAsync(sub);
        }
        
        public System.Data.DataSet GetSubjects() {
            return base.Channel.GetSubjects();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSubjectsAsync() {
            return base.Channel.GetSubjectsAsync();
        }
        
        public System.Data.DataSet GetSubject(int ID) {
            return base.Channel.GetSubject(ID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSubjectAsync(int ID) {
            return base.Channel.GetSubjectAsync(ID);
        }
        
        public string delete_Subject(int ID) {
            return base.Channel.delete_Subject(ID);
        }
        
        public System.Threading.Tasks.Task<string> delete_SubjectAsync(int ID) {
            return base.Channel.delete_SubjectAsync(ID);
        }
    }
}
